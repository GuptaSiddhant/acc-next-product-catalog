import Head from "next/head";
import Link from "next/link";
import Image from "next/image";
import styles from "../../styles/Home.module.css";
import { useState, useCallback } from "react";

export async function getServerSideProps(context) {
  const id = context.params.id;
  const quoteResponse = await fetch("http://localhost:3000/api/quotes/" + id);
  const quote = await quoteResponse.json();
  return {
    props: {
      quote,
    },
  };
}

export default function QuotePage({ quote }) {
  const [currentQuote, setCurrentQuote] = useState(quote);
  const [addComment] = useAddComment(quote.id);

  const handleComment = async (e) => {
    e.preventDefault();
    await addComment(e.target.comment.value);
    const quoteResponse = await fetch(
      "http://localhost:3000/api/quotes/" + quote.id
    );
    setCurrentQuote(await quoteResponse.json());
  };

  const {
    value = "",
    comments = [],
    icon_url = "",
    charlieUtterance = 0,
  } = currentQuote;

  return (
    <div className={styles.container}>
      <Head>
        <title>Quotes</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Link href="/quotes">
          <a>Back</a>
        </Link>
        <Image src={icon_url} width={50} height={50} />
        <h1 className={styles.title}>Chuck Norris Quote</h1>
        <blockquote>{value}</blockquote>
        <p>Uttered {charlieUtterance} times</p>

        <section>
          <h2>Comments</h2>
          <form onSubmit={handleComment}>
            <input
              required
              type="text"
              name="comment"
              placeholder="Add comment"
            />

            <button type="submit">Submit</button>
          </form>
          <ul>
            {comments.map((comment) => (
              <li key={comment} className={styles.quoteCard}>
                {comment}
              </li>
            ))}
          </ul>
        </section>
      </main>

      <footer className={styles.footer}></footer>
    </div>
  );
}

function useAddComment(id) {
  const [data, setData] = useState();
  const [loading, setLoading] = useState(false);
  const mutate = useCallback((value) => {
    setLoading(true);
    return fetch(
      `http://localhost:3000/api/quotes/comment?id=${id}&comment=${value}`,
      {}
    )
      .then((res) => res.json())
      .then((json) => setData(json))
      .catch((error) => console.log(error))
      .finally(() => setLoading(false));
  }, []);

  return [mutate, { data, loading }];
}
